openapi: 3.0.1
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
  version: '1.0'
servers:
  - url: '//localhost:8090/'
tags:
  - name: admin-controller
    description: Admin Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: login-controller
    description: Login Controller
  - name: order-rest-controller
    description: Order Rest Controller
  - name: user-controller
    description: User Controller
paths:
  /403:
    get:
      tags:
        - login-controller
      summary: showAccessDenied
      operationId: showAccessDeniedUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /admin:
    get:
      tags:
        - admin-controller
      summary: getHomePage
      operationId: getHomePageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /admin/best-buying-person-last-half-year:
    get:
      tags:
        - admin-controller
      summary: getBestBuyingPersonForLastHalfYear
      operationId: getBestBuyingPersonForLastHalfYearUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /admin/best-selling-item:
    get:
      tags:
        - admin-controller
      summary: getMostSoldItemPage
      operationId: getMostSoldItemPageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /admin/best-selling-items-by-18-years-old-person:
    get:
      tags:
        - admin-controller
      summary: getBestSellingItemsBy18YearOldPerson
      operationId: getBestSellingItemsBy18YearOldPersonUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /admin/buying-items-last-week:
    get:
      tags:
        - admin-controller
      summary: getOrdersForLastWeekPage
      operationId: getOrdersForLastWeekPageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '201':
          description: Created
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '201':
          description: Created
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
      deprecated: false
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
      deprecated: false
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
      deprecated: false
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
      deprecated: false
  /login:
    get:
      tags:
        - login-controller
      summary: showLoginPage
      operationId: showLoginPageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /orders:
    put:
      tags:
        - order-rest-controller
      summary: Update order
      operationId: updateOrderUsingPUT
      requestBody:
        description: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '201':
          description: Created
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
    post:
      tags:
        - order-rest-controller
      summary: saveOrder
      operationId: saveOrderUsingPOST
      requestBody:
        description: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        '201':
          description: Created
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
    delete:
      tags:
        - order-rest-controller
      summary: Delete order
      operationId: deleteOrderByIdUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content: {}
        '204':
          description: No Content
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
      deprecated: false
  '/orders/user/{id}':
    get:
      tags:
        - order-rest-controller
      summary: Find orders by user
      operationId: getOrdersByUserIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  '/orders/{id}':
    get:
      tags:
        - order-rest-controller
      summary: Find order by id
      operationId: getOrderByIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /registration:
    get:
      tags:
        - login-controller
      summary: showUserRegistrationPage
      operationId: showUserRegistrationPageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
    post:
      tags:
        - login-controller
      summary: createNewUser
      operationId: createNewUserUsingPOST
      parameters:
        - name: age
          in: query
          schema:
            type: integer
            format: int32
        - name: id
          in: query
          schema:
            type: integer
            format: int64
        - name: lastName
          in: query
          schema:
            type: string
        - name: login
          in: query
          schema:
            type: string
        - name: model
          in: query
          schema:
            type: object
        - name: name
          in: query
          schema:
            type: string
        - name: 'orders[0].buyItems[0].count'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].buyItems[0].id'
          in: query
          schema:
            type: integer
            format: int64
        - name: 'orders[0].buyItems[0].item.count'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].buyItems[0].item.id'
          in: query
          schema:
            type: integer
            format: int64
        - name: 'orders[0].buyItems[0].item.name'
          in: query
          schema:
            type: string
        - name: 'orders[0].buyItems[0].item.price'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].id'
          in: query
          schema:
            type: integer
            format: int64
        - name: 'orders[0].purchaseDate.date'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.day'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.hours'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.minutes'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.month'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.nanos'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.seconds'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.time'
          in: query
          schema:
            type: integer
            format: int64
        - name: 'orders[0].purchaseDate.timezoneOffset'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].purchaseDate.year'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].user.age'
          in: query
          schema:
            type: integer
            format: int32
        - name: 'orders[0].user.id'
          in: query
          schema:
            type: integer
            format: int64
        - name: 'orders[0].user.lastName'
          in: query
          schema:
            type: string
        - name: 'orders[0].user.login'
          in: query
          schema:
            type: string
        - name: 'orders[0].user.name'
          in: query
          schema:
            type: string
        - name: 'orders[0].user.password'
          in: query
          schema:
            type: string
        - name: 'orders[0].user.role'
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
        - name: reference
          in: query
          schema:
            type: boolean
        - name: role
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum:
              - 100 CONTINUE
              - 101 SWITCHING_PROTOCOLS
              - 102 PROCESSING
              - 103 CHECKPOINT
              - 200 OK
              - 201 CREATED
              - 202 ACCEPTED
              - 203 NON_AUTHORITATIVE_INFORMATION
              - 204 NO_CONTENT
              - 205 RESET_CONTENT
              - 206 PARTIAL_CONTENT
              - 207 MULTI_STATUS
              - 208 ALREADY_REPORTED
              - 226 IM_USED
              - 300 MULTIPLE_CHOICES
              - 301 MOVED_PERMANENTLY
              - 302 FOUND
              - 302 MOVED_TEMPORARILY
              - 303 SEE_OTHER
              - 304 NOT_MODIFIED
              - 305 USE_PROXY
              - 307 TEMPORARY_REDIRECT
              - 308 PERMANENT_REDIRECT
              - 400 BAD_REQUEST
              - 401 UNAUTHORIZED
              - 402 PAYMENT_REQUIRED
              - 403 FORBIDDEN
              - 404 NOT_FOUND
              - 405 METHOD_NOT_ALLOWED
              - 406 NOT_ACCEPTABLE
              - 407 PROXY_AUTHENTICATION_REQUIRED
              - 408 REQUEST_TIMEOUT
              - 409 CONFLICT
              - 410 GONE
              - 411 LENGTH_REQUIRED
              - 412 PRECONDITION_FAILED
              - 413 PAYLOAD_TOO_LARGE
              - 413 REQUEST_ENTITY_TOO_LARGE
              - 414 URI_TOO_LONG
              - 414 REQUEST_URI_TOO_LONG
              - 415 UNSUPPORTED_MEDIA_TYPE
              - 416 REQUESTED_RANGE_NOT_SATISFIABLE
              - 417 EXPECTATION_FAILED
              - 418 I_AM_A_TEAPOT
              - 419 INSUFFICIENT_SPACE_ON_RESOURCE
              - 420 METHOD_FAILURE
              - 421 DESTINATION_LOCKED
              - 422 UNPROCESSABLE_ENTITY
              - 423 LOCKED
              - 424 FAILED_DEPENDENCY
              - 426 UPGRADE_REQUIRED
              - 428 PRECONDITION_REQUIRED
              - 429 TOO_MANY_REQUESTS
              - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
              - 451 UNAVAILABLE_FOR_LEGAL_REASONS
              - 500 INTERNAL_SERVER_ERROR
              - 501 NOT_IMPLEMENTED
              - 502 BAD_GATEWAY
              - 503 SERVICE_UNAVAILABLE
              - 504 GATEWAY_TIMEOUT
              - 505 HTTP_VERSION_NOT_SUPPORTED
              - 506 VARIANT_ALSO_NEGOTIATES
              - 507 INSUFFICIENT_STORAGE
              - 508 LOOP_DETECTED
              - 509 BANDWIDTH_LIMIT_EXCEEDED
              - 510 NOT_EXTENDED
              - 511 NETWORK_AUTHENTICATION_REQUIRED
        - name: view.contentType
          in: query
          schema:
            type: string
        - name: viewName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '201':
          description: Created
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
  /user:
    get:
      tags:
        - user-controller
      summary: showMainPage
      operationId: showMainPageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
      deprecated: false
components:
  schemas:
    Order:
      title: Order
      type: object
      properties:
        buyItems:
          type: array
          items:
            $ref: '#/components/schemas/BuyItem'
        id:
          type: integer
          format: int64
        purchaseDate:
          $ref: '#/components/schemas/Timestamp'
        user:
          $ref: '#/components/schemas/User'
    Item:
      title: Item
      type: object
      properties:
        count:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int32
    User:
      title: User
      type: object
      properties:
        age:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        lastName:
          type: string
        login:
          type: string
        name:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        password:
          type: string
        role:
          type: string
    BuyItem:
      title: BuyItem
      type: object
      properties:
        count:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        item:
          $ref: '#/components/schemas/Item'
        order:
          $ref: '#/components/schemas/Order'
    UserDto:
      title: UserDto
      type: object
      properties:
        age:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        lastName:
          type: string
        login:
          type: string
        name:
          type: string
        password:
          type: string
        role:
          type: string
    ModelAndView:
      title: ModelAndView
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
          properties: {}
        modelMap:
          type: object
          additionalProperties:
            type: object
            properties: {}
        reference:
          type: boolean
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    OrderDto:
      title: OrderDto
      type: object
      properties:
        amount:
          type: number
          format: double
        buyItems:
          type: array
          items:
            $ref: '#/components/schemas/BuyItem'
        id:
          type: integer
          format: int64
        purchaseDate:
          $ref: '#/components/schemas/Timestamp'
        user:
          $ref: '#/components/schemas/UserDto'
    Timestamp:
      title: Timestamp
      type: object
      properties:
        date:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
        hours:
          type: integer
          format: int32
        minutes:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        nanos:
          type: integer
          format: int32
        seconds:
          type: integer
          format: int32
        time:
          type: integer
          format: int64
        timezoneOffset:
          type: integer
          format: int32
        year:
          type: integer
          format: int32
    View:
      title: View
      type: object
      properties:
        contentType:
          type: string
